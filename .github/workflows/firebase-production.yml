name: Deploy to Firebase Hosting (Production)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file
        run: |
          cat << EOF > .env.production
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY }}
          NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY }}
          NEXT_PUBLIC_SITE_URL=https://skapl-prod.web.app
          NEXT_PUBLIC_STATIC_EXPORT=true
          EOF

      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup Firebase Functions
        run: |
          cd functions
          npm ci
          cd ..

      - name: Create Firebase service account file
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json

      - name: Create Google Cloud service account file
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}' > gs_key.json

      - name: Prepare Firebase Functions environment files
        run: |
          cd functions
          # Create service account files that functions will use at runtime
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' > firebase-service-account.json
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}' > google-service-account.json
          
          # Create .env file with non-JSON environment variables
          # Note: Cannot use FIREBASE_* or GOOGLE_* or X_GOOGLE_* or EXT_* prefixes (reserved by Firebase)
          echo "TURNSTILE_CONTACT_SECRET_KEY=${{ secrets.TURNSTILE_CONTACT_SECRET_KEY }}" > .env
          echo "TURNSTILE_CAREER_SECRET_KEY=${{ secrets.TURNSTILE_CAREER_SECRET_KEY }}" >> .env
          echo "GCP_PROJECT_ID=${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}" >> .env
          echo "GCS_BUCKET=${{ secrets.GOOGLE_CLOUD_STORAGE_BUCKET }}" >> .env
          echo "GSHEET_ID=${{ secrets.GOOGLE_SHEET_ID }}" >> .env
          echo "GSHEET_ID_CRP=${{ secrets.GOOGLE_SHEET_ID_CRP }}" >> .env
          echo "KLIAN_CHATBOT_KEY=${{ secrets.KLIAN_CHATBOT_KEY }}" >> .env
          echo "SERVICE_ACCOUNT_PATH=./firebase-service-account.json" >> .env
          echo "GCS_SERVICE_ACCOUNT_PATH=./google-service-account.json" >> .env
          cd ..

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy Functions to Firebase (Private - Accessible via Firebase Hosting)
        run: firebase deploy --only functions --project skapl-prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gs_key.json
          
      - name: Grant Firebase Hosting access to functions
        run: |
          # Grant Firebase Hosting service account access to invoke functions
          gcloud functions add-iam-policy-binding career --region=us-central1 --member=serviceAccount:firebase-adminsdk-fbsvc@skapl-prod.iam.gserviceaccount.com --role=roles/cloudfunctions.invoker --project=skapl-prod || echo "IAM already set"
          gcloud functions add-iam-policy-binding contact --region=us-central1 --member=serviceAccount:firebase-adminsdk-fbsvc@skapl-prod.iam.gserviceaccount.com --role=roles/cloudfunctions.invoker --project=skapl-prod || echo "IAM already set"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gs_key.json

      - name: Deploy Hosting to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}'
          channelId: live
          projectId: skapl-prod
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks


      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f firebase-service-account.json
          rm -f gs_key.json
          rm -f .env.production
          rm -f functions/.env
          rm -f functions/firebase-service-account.json
          rm -f functions/google-service-account.json

      - name: Deploy success notification
        if: success()
        run: |
          echo "ðŸš€ Deployment successful!"
          echo "ðŸ“¦ Hosting URL: https://skapl-prod.web.app"
          echo "âš¡ Functions deployed to us-central1"