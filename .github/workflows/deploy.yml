name: Deploy
on:
  push:
    branches: [ main, demo ]
  pull_request:
    branches: [ main, demo ]

jobs:
  deploy_demo:
    name: Deploy Demo
    if: github.ref == 'refs/heads/demo'
    runs-on: ubuntu-latest
    environment: demo
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.DEMO_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.DEMO_SUPABASE_ANON_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.DEMO_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.DEMO_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.DEMO_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.DEMO_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEMO_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.DEMO_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.DEMO_FIREBASE_MEASUREMENT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY=${{ secrets.DEMO_TURNSTILE_CONTACT_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CONTACT_SECRET_KEY=${{ secrets.DEMO_TURNSTILE_CONTACT_SECRET_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY=${{ secrets.DEMO_TURNSTILE_CAREER_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CAREER_SECRET_KEY=${{ secrets.DEMO_TURNSTILE_CAREER_SECRET_KEY }}" >> .env.local

      - name: Build
        run: npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.DEMO_FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.DEMO_FIREBASE_PROJECT_ID }}
          channelId: demo
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

  deploy_prod:
    name: Deploy Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.PROD_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PROD_SUPABASE_ANON_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.PROD_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.PROD_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.PROD_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.PROD_FIREBASE_MEASUREMENT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY=${{ secrets.PROD_TURNSTILE_CONTACT_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CONTACT_SECRET_KEY=${{ secrets.PROD_TURNSTILE_CONTACT_SECRET_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY=${{ secrets.PROD_TURNSTILE_CAREER_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CAREER_SECRET_KEY=${{ secrets.PROD_TURNSTILE_CAREER_SECRET_KEY }}" >> .env.local

      - name: Build
        run: npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.PROD_FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
          channelId: live
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks