name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - demo
  pull_request:
    branches:
      - demo

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.local for build
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURNSTILE_CONTACT_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CONTACT_SECRET_KEY=${{ secrets.TURNSTILE_CONTACT_SECRET_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURNSTILE_CAREER_SITE_KEY }}" >> .env.local
          echo "TURNSTILE_CAREER_SECRET_KEY=${{ secrets.TURNSTILE_CAREER_SECRET_KEY }}" >> .env.local

      - name: Update next.config.js for static export
        run: |
          cat > next.config.js << 'EOL'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            eslint: {
              ignoreDuringBuilds: true,
            },
            images: {
              domains: [
                'images.unsplash.com',
                'media.licdn.com',
                'cdn-images-1.medium.com',
                'miro.medium.com'
              ],
              unoptimized: true,
            },
            output: 'export',
            distDir: 'out',
            trailingSlash: false
          };
          
          module.exports = nextConfig;
          EOL

      - name: Build static site
        run: npm run build

      - name: Install Functions dependencies
        run: |
          cd functions
          npm install

      - name: Delete obsolete Firebase function
        uses: w9jds/firebase-action@master
        with:
          args: functions:delete nextServer --region us-central1 --force --token "$FIREBASE_TOKEN"
        continue-on-error: true
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SKAPL_DEMO }}
          PROJECT_ID: skapl-demo
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SKAPL_DEMO }}'
          projectId: skapl-demo
          channelId: live


